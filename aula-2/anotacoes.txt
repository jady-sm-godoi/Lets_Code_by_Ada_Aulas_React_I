var: tem escopo global ou escopo de função/local
let: tem escopo de bloco {}
const: matêm valores constantes. Tem escopo de bloco.


Organização em pastas:

- Common: aqui estao todos os assetes do projeto que serao usados pelo aplicativo, 
como estilos globais, imagens, fontes, mocks, stories, funçoes reuntilizavis.

- Components: Aqui vai ficar todos os componentes que são utilizados de uma forma
global pela aplicação, componentes utilizados somente por uma página em
específica vai ficar em outro lugar.

- Configs: Aqui vai ficar todos os arquivos de configuração, que são utilizados de uma
forma global pela aplicação.

- Containers: Aqui vai ficar todos os nossos containers responsáveis por desacoplar a
nossa aplicação de alguma biblioteca, possibilitando alterar as libs sem
precisar mexer em varios lugares do código.

- Hooks: Aqui eu gosto de deixar todos os hooks customizáveis da aplicação, por
exemplo, um hook que cuida da sessão do usuário.

- Pages: Como o próprio nome já diz, aqui vai ficar todas as páginas da nossa
aplicação, ah e lembra que falei que os componentes utilizados somente
por uma página ficariam em outro lugar?! Então, aqui é o lugar também,
dentro de cada pasta de página vamos ter uma pasta components que
contém todos os componentes exclusivos da página.

- Routes: Aqui vai ficar todos os nosso arquivos que gerenciam as rotas da nossa
aplicação.

- Services: Nessa pasta fica todos os arquivos responsáveis por consumir serviços
externos, como por exemplo o arquivo de configuração do axios para
consumir APIs RestFul.

A pasta componentes terá as seguintes sub-pastas:

-Um arquivo responsável pelo componente: YourComponent.tsx ​
-Um arquivo para os stories do StoryBook: YourComponent.stories.tsx ​
-Um arquivo para testes: YourComponent.spec.tsx ​
-Um arquivo para as interfaces (Quando uso TypeScript): interfaces.ts ​
-Um arquivo para o styled-components: styles.ts ​
-E um arquivo responsável por exportar o componente: index.ts ​

A pasta pages terá as seguintes sub-pastas:

-Uma pasta responsável pelos componentes que só são utilizados naquela
página, ah e essa pasta segue a mesma estrutura da pasta de componentes que
mostrei acima ​ ​
-Um arquivo responsável pela página: YourPage.tsx ​
-Um arquivo para testes: YourPage.spec.tsx ​
-Um arquivo para as interfaces (Quando uso TypeScript): interfaces.ts ​
-Um arquivo para o styled-components: styles.ts ​
-E um arquivo responsável por exportar a página: index.ts ​

COMPONENTES:
São blocos de construção de qualquer aplicativo React.
São classes ou funções JS que aceitam parametros (props)
e retornam um elemento React que descreve como uma seção
da interface deve aparecer.

"Componentes são blocos de código (JS, HTML = JSX e CSS)
que podem ser reutilizados em vários locais da aplicação."

